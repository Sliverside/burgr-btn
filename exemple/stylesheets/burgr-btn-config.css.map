{"version":3,"sources":["burgr-btn.scss"],"names":[],"mappings":"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","file":"burgr-btn-config.css","sourcesContent":["@import \"helpers/functions\";\n@import \"helpers/breakpointsObj\";\n@import \"helpers/math\";\n\n$burgr-default: (\n  'width': 40px, // (px)\n  'stroke': 5px, // (px)\n  'space-between': 4px, // (px)\n  'state': 'normal', // normal, clasic, cross, arrow-left, arrow-right, arrow-top, arrow-bottom, vertical-points, horizontal-points\n  'active-state': 'cross', // normal, clasic, cross, arrow-left, arrow-right, arrow-top, arrow-bottom, vertical-points, horizontal-points\n  'hover-state': 'clasic', // normal, clasic, cross, arrow-left, arrow-right, arrow-top, arrow-bottom, vertical-points, horizontal-points\n  // 'arrow-size-even': true, // true : arrows will always have same size, false: arrows will always take the maximum space they can\n) !default;\n\n$burgr: () !default;\n$burgr: map-merge($burgr-default, $burgr);\n\n$burgrs-default: (\n  'clasic':(\n    'parent':  '#default#',\n    'state': 'clasic',\n    'active-state': 'cross',\n    'hover-state': 'normal'\n  ),\n  'cross':(\n    'parent':  '#default#',\n    'state': 'cross',\n    'active-state': 'arrow-right',\n    'hover-state': 'arrow-top'\n  ),\n  'left':(\n    'parent':  '#default#',\n    'state': 'arrow-left',\n    'active-state': 'arrow-right',\n  ),\n  'right':(\n    'parent':  '#default#',\n    'state': 'arrow-right',\n    'active-state': 'arrow-left',\n  ),\n  'top':(\n    'parent':  '#default#',\n    'state': 'arrow-top',\n    'active-state': 'arrow-bottom',\n  ),\n  'bottom':(\n    'parent':  '#default#',\n    'state': 'arrow-bottom',\n    'active-state': 'arrow-top',\n  ),\n  'vertical-points':(\n    'parent':  '#default#',\n    'state': 'vertical-points',\n    'active-state': 'cross',\n    'hover-state': 'normal'\n  ),\n  'horizontal-points':(\n    'parent':  '#default#',\n    'state': 'horizontal-points',\n    'active-state': 'cross',\n  ),\n) !default;\n\n$burgrs: () !default;\n$burgrs: map-merge($burgrs-default, $burgrs);\n\n$burgrs: map-merge(('#default#' : $burgr), $burgrs);\n\n$burgrs-cache: ();\n@each $name, $v in $burgrs {\n  $this: $v;\n  @if this('parent') {\n    $parent: G($burgrs, this('parent'));\n    $parent: D($parent, 'state');\n    $parent: D($parent, 'hover-state');\n    $parent: D($parent, 'active-state');\n    $burgrs-cache: S($burgrs-cache, $name, map-merge($parent, $this));\n  }@else {\n    $burgrs-cache: S($burgrs-cache, $name,map-merge($burgr, $this));\n  }\n}\n$BPS: add-bp-vars($burgrs-cache, 'burgrs');\n\n.burgr {\n  position: relative;\n  .burgr-part {\n    transition: 200ms;\n    position: absolute;\n    background-color: #333;\n  }\n}\n\n@mixin state($this, $state, $default: false) {\n  $state: Gbp($state);\n  $arrow-diag-h: Gbp('diagonale');\n  @if Gbp('diagonale')/sqrt(2) > Gbp('height')/2 {\n    $arrow-diag-h: Gbp('height')/2*sqrt(2);\n  }\n\n  $arrow-diag-v: Gbp('diagonale');\n  @if Gbp('diagonale')/sqrt(2) > Gbp('width')/2 {\n    $arrow-diag-v: Gbp('width')/2*sqrt(2);\n  }\n  @if Gbp('arrow-size-even') == null or Gbp('arrow-size-even') == true {\n    @if $arrow-diag-h > $arrow-diag-v {\n      $arrow-diag-h: $arrow-diag-v;\n    }@else {\n      $arrow-diag-v: $arrow-diag-h;\n    }\n  }\n\n  @if $state == 'clasic' {\n    .burgr-part {\n      &:nth-child(1),\n      &:nth-child(2),\n      &:nth-child(3) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(0) rotate(0deg);\n        width: Gbp('width');\n        opacity: 1;\n      }\n    }\n  }@else if $state == 'cross' {\n    .burgr-part {\n      &:nth-child(1) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(Gbp('stroke') + Gbp('space-between')) rotate(45deg);\n        width: Gbp('diagonale');\n      }\n      &:nth-child(2) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(0) rotate(-45deg);\n        width: Gbp('diagonale');\n      }\n      &:nth-child(3) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(Gbp('stroke')) rotate(0deg);\n        opacity: 0;\n        pointer-events: none;\n      }\n    }\n  }@else if $state == 'vertical-points' {\n    .burgr-part {\n      &:nth-child(1),\n      &:nth-child(2),\n      &:nth-child(3) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(0) rotate(0deg);\n        width: Gbp('stroke');\n        opacity: 1;\n      }\n    }\n  }@else if $state == 'horizontal-points' {\n    .burgr-part {\n      &:nth-child(1),\n      &:nth-child(2),\n      &:nth-child(3) {\n        width: Gbp('stroke');\n        opacity: 1;\n      }\n      &:nth-child(1) {\n        transform: scaleX(1) scaleY(1) translateX(calc(-50% - #{Gbp('space-between') + Gbp('stroke')})) translateY(Gbp('space-between') + Gbp('stroke')) rotate(0deg);\n      }\n      &:nth-child(2) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(0) rotate(0deg);\n      }\n      &:nth-child(3) {\n        transform: scaleX(1) scaleY(1) translateX(calc(-50% + #{Gbp('space-between') + Gbp('stroke')})) translateY(-(Gbp('space-between') + Gbp('stroke'))) rotate(0deg);\n      }\n    }\n  }@else if $state == 'arrow-left' {\n    .burgr-part {\n      &:nth-child(1) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY($arrow-diag-h/2/sqrt(2) + Gbp('stroke')/2/sqrt(2) - (Gbp('stroke')*0.5)) rotate(-45deg);\n        width: $arrow-diag-h;\n      }\n      &:nth-child(2) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY($arrow-diag-h/2/sqrt(2) - Gbp('stroke')/2/sqrt(2)) rotate(45deg);\n        width: $arrow-diag-h;\n      }\n      &:nth-child(3) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(Gbp('stroke')) rotate(0);\n        opacity: 0;\n        pointer-events: none;\n      }\n    }\n  }@else if $state == 'arrow-right' {\n    .burgr-part {\n      &:nth-child(1) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY($arrow-diag-h/2/sqrt(2) + Gbp('stroke')/2/sqrt(2) - (Gbp('stroke')*0.5)) rotate(45deg);\n        width: $arrow-diag-h;\n      }\n      &:nth-child(2) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY($arrow-diag-h/2/sqrt(2) - Gbp('stroke')/2/sqrt(2)) rotate(-45deg);\n        width: $arrow-diag-h;\n      }\n      &:nth-child(3) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(Gbp('stroke')) rotate(0);\n        opacity: 0;\n        pointer-events: none;\n      }\n    }\n  }@else if $state == 'arrow-top' {\n    .burgr-part {\n      &:nth-child(1) {\n        transform: scaleX(1) scaleY(1) translateX(calc(-50% + #{$arrow-diag-v/4*sqrt(2) - Gbp('stroke')/4*sqrt(2)})) translateY(Gbp('height')/2 - Gbp('stroke')/2) rotate(45deg);\n        width: $arrow-diag-v;\n      }\n      &:nth-child(2) {\n        transform: scaleX(1) scaleY(1) translateX(calc(-50% - #{$arrow-diag-v/4*sqrt(2) - Gbp('stroke')/4*sqrt(2)})) translateY(0) rotate(-45deg);\n        width: $arrow-diag-v;\n      }\n      &:nth-child(3) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(Gbp('stroke')) rotate(0);\n        opacity: 0;\n        pointer-events: none;\n      }\n    }\n  }@else if $state == 'arrow-bottom' {\n    .burgr-part {\n      &:nth-child(1) {\n        transform: scaleX(1) scaleY(1) translateX(calc(-50% + #{$arrow-diag-v/4*sqrt(2) - Gbp('stroke')/4*sqrt(2)})) translateY(Gbp('height')/2 - Gbp('stroke')/2) rotate(-45deg);\n        width: $arrow-diag-v;\n      }\n      &:nth-child(2) {\n        transform: scaleX(1) scaleY(1) translateX(calc(-50% - #{$arrow-diag-v/4*sqrt(2) - Gbp('stroke')/4*sqrt(2)})) translateY(0) rotate(45deg);\n        width: $arrow-diag-v;\n      }\n      &:nth-child(3) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(Gbp('stroke')) rotate(0);\n        opacity: 0;\n        pointer-events: none;\n      }\n    }\n  }@else if $state == 'normal' or $default == true { // state: normal\n    .burgr-part {\n      &:nth-child(1),\n      &:nth-child(2),\n      &:nth-child(3) {\n        opacity: 1;\n      }\n      &:nth-child(1) {\n        transform: scaleX(1) scaleY(1) translateX(calc(-50% - #{Gbp('width')*0.1/2})) translateY(0) rotate(0deg);\n        width: Gbp('width')*0.9;\n      }\n      &:nth-child(2) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(0) rotate(0deg);\n        width: Gbp('width');\n      }\n      &:nth-child(3) {\n        transform: scaleX(1) scaleY(1) translateX(calc(-50% - #{Gbp('width')*0.2/2})) translateY(0) rotate(0deg);\n        width: Gbp('width')*0.8;\n      }\n    }\n  }\n}\n\n@each $name, $burgr in G($BPS, 'burgrs') {\n  $this: $burgr !global;\n  @if G(nth($this, 1), 'global', 'parent') {\n    $name: if( G(nth($this, 1), 'global', 'parent') == \"#default#\", '.burgr-' + $name, 'burgr-'+ G(nth($this, 1), 'global', 'parent') + '-' + $name);\n  }@else {\n    $name: if($name == \"#default#\", '.burgr', '.burgr-' + $name);\n  }\n\n  #{$name} {\n    @each $bp in $burgr {\n      $this: $bp;\n      $this: Sbp('height', Gbp('stroke')*3 + Gbp('space-between')*2);\n      $this: Sbp('diagonale', 0px);\n      @if Gbp('width') {\n        @if Gbp(('stroke', 'space-between'), true) {\n          @if Gbp('width') < Gbp('height') {\n            $this: Sbp('diagonale', Gbp('width')*sqrt(2) - Gbp('stroke'));\n          }@else {\n            $this: Sbp('diagonale', Gbp('height')*sqrt(2) - Gbp('stroke'));\n          }\n        }\n      }\n\n      @include BPS(G($bp, 'breakpoint', 'max'), G($bp, 'breakpoint', 'min')) {\n        @if Gbp('width', false) {width: Gbp('width');}\n        @if Gbp(('stroke', 'space-between'), false) {height: Gbp('height');}\n        @if Gbp('parent') == null {\n          .burgr-part {\n            opacity: 1;\n            @if Gbp('width', false) {left: Gbp('width')/2;}\n            @if Gbp('stroke', false) {height: Gbp('stroke');}\n            @if Gbp('width', false) {width: Gbp('width');}\n            &:nth-child(2) {\n              @if Gbp(('space-between', 'stroke'), false) {top: Gbp('stroke') + Gbp('space-between');}\n            }\n            &:nth-child(3) {\n              @if Gbp(('space-between', 'stroke'), false) {top: Gbp('stroke')*2 + Gbp('space-between')*2;}\n            }\n          }\n        }\n\n        @if Gbp('state') {\n          @include state($this, 'state', if(Gbp('parent') == null, true, false));\n        }\n\n        @if Gbp('hover-state') {\n          &:hover {\n            @include state($this, 'hover-state');\n          }\n        }\n        @if Gbp('active-state') {\n          &.active {\n            @include state($this, 'active-state');\n          }\n        }\n      }\n    }\n  }\n}\n"]}