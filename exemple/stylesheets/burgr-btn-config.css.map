{"version":3,"sources":["burgr-btn.scss"],"names":[],"mappings":"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","file":"burgr-btn-config.css","sourcesContent":["@import \"helpers/functions\";\n@import \"helpers/breakpoints\";\n@import \"helpers/math\";\n\n$burgr-default: (\n  'width': 40px, // (px)\n  'stroke': 5px, // (px)\n  'space-between': 4px, // (px)\n  'state': 'normal', // normal, clasic, cross, arrow-left, arrow-right, arrow-top, arrow-bottom, vertical-points, horizontal-points\n  'active-state': 'cross', // normal, clasic, cross, arrow-left, arrow-right, arrow-top, arrow-bottom, vertical-points, horizontal-points\n  'hover-state': 'clasic', // normal, clasic, cross, arrow-left, arrow-right, arrow-top, arrow-bottom, vertical-points, horizontal-points\n  // 'arrow-size-even': true, // true : arrows will always have same size, false: arrows will always take the maximum space they can\n) !default;\n\n$burgr: () !default;\n$burgr: map-merge($burgr-default, $burgr);\n\n$burgrs-default: (\n  'clasic':(\n    'parent': '#default#',\n    'state': 'clasic',\n  ),\n  'cross':(\n    'parent': '#default#',\n    'state': 'cross',\n  ),\n  'left':(\n    'parent': '#default#',\n    'state': 'arrow-left',\n  ),\n  'right':(\n    'parent': '#default#',\n    'state': 'arrow-right',\n  ),\n  'top':(\n    'parent': '#default#',\n    'state': 'arrow-top',\n  ),\n  'bottom':(\n    'parent':  '#default#',\n    'state': 'arrow-bottom',\n  ),\n  'vertical-points':(\n    'parent': '#default#',\n    'state': 'vertical-points',\n  ),\n  'horizontal-points':(\n    'parent': '#default#',\n    'state': 'horizontal-points',\n  ),\n) !default;\n\n$burgrs: () !default;\n$burgrs: map-merge($burgrs-default, $burgrs);\n\n$burgrs: map-merge(('#default#' : $burgr), $burgrs);\n\n.burgr {\n  position: relative;\n  .burgr-part {\n    transition: 200ms;\n    position: absolute;\n    background-color: #333;\n  }\n}\n\n@mixin state($this, $state, $default: false) {\n  $state: Gbp($state);\n  $arrow-diag-h: Gbp('diagonale');\n  @if Gbp('diagonale')/sqrt(2) > Gbp('height')/2 {\n    $arrow-diag-h: Gbp('height')/2*sqrt(2);\n  }\n\n  $arrow-diag-v: Gbp('diagonale');\n  @if Gbp('diagonale')/sqrt(2) > Gbp('width')/2 {\n    $arrow-diag-v: Gbp('width')/2*sqrt(2);\n  }\n  @if Gbp('arrow-size-even') == null or Gbp('arrow-size-even') == true {\n    @if $arrow-diag-h > $arrow-diag-v {\n      $arrow-diag-h: $arrow-diag-v;\n    }@else {\n      $arrow-diag-v: $arrow-diag-h;\n    }\n  }\n\n  @if $state == 'clasic' {\n    .burgr-part {\n      &:nth-child(1),\n      &:nth-child(2),\n      &:nth-child(3) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(0) rotate(0deg);\n        width: Gbp('width');\n        opacity: 1;\n      }\n    }\n  }@else if $state == 'cross' {\n    .burgr-part {\n      &:nth-child(1) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(Gbp('stroke') + Gbp('space-between')) rotate(45deg);\n        width: Gbp('diagonale');\n      }\n      &:nth-child(2) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(0) rotate(-45deg);\n        width: Gbp('diagonale');\n      }\n      &:nth-child(3) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(Gbp('stroke')) rotate(0deg);\n        opacity: 0;\n        pointer-events: none;\n      }\n    }\n  }@else if $state == 'vertical-points' {\n    .burgr-part {\n      &:nth-child(1),\n      &:nth-child(2),\n      &:nth-child(3) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(0) rotate(0deg);\n        width: Gbp('stroke');\n        opacity: 1;\n      }\n    }\n  }@else if $state == 'horizontal-points' {\n    .burgr-part {\n      &:nth-child(1),\n      &:nth-child(2),\n      &:nth-child(3) {\n        width: Gbp('stroke');\n        opacity: 1;\n      }\n      &:nth-child(1) {\n        transform: scaleX(1) scaleY(1) translateX(calc(-50% - #{Gbp('space-between') + Gbp('stroke')})) translateY(Gbp('space-between') + Gbp('stroke')) rotate(0deg);\n      }\n      &:nth-child(2) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(0) rotate(0deg);\n      }\n      &:nth-child(3) {\n        transform: scaleX(1) scaleY(1) translateX(calc(-50% + #{Gbp('space-between') + Gbp('stroke')})) translateY(-(Gbp('space-between') + Gbp('stroke'))) rotate(0deg);\n      }\n    }\n  }@else if $state == 'arrow-left' {\n    .burgr-part {\n      &:nth-child(1) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY($arrow-diag-h/2/sqrt(2) + Gbp('stroke')/2/sqrt(2) - (Gbp('stroke')*0.5)) rotate(-45deg);\n        width: $arrow-diag-h;\n      }\n      &:nth-child(2) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY($arrow-diag-h/2/sqrt(2) - Gbp('stroke')/2/sqrt(2)) rotate(45deg);\n        width: $arrow-diag-h;\n      }\n      &:nth-child(3) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(Gbp('stroke')) rotate(0);\n        opacity: 0;\n        pointer-events: none;\n      }\n    }\n  }@else if $state == 'arrow-right' {\n    .burgr-part {\n      &:nth-child(1) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY($arrow-diag-h/2/sqrt(2) + Gbp('stroke')/2/sqrt(2) - (Gbp('stroke')*0.5)) rotate(45deg);\n        width: $arrow-diag-h;\n      }\n      &:nth-child(2) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY($arrow-diag-h/2/sqrt(2) - Gbp('stroke')/2/sqrt(2)) rotate(-45deg);\n        width: $arrow-diag-h;\n      }\n      &:nth-child(3) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(Gbp('stroke')) rotate(0);\n        opacity: 0;\n        pointer-events: none;\n      }\n    }\n  }@else if $state == 'arrow-top' {\n    .burgr-part {\n      &:nth-child(1) {\n        transform: scaleX(1) scaleY(1) translateX(calc(-50% + #{$arrow-diag-v/4*sqrt(2) - Gbp('stroke')/4*sqrt(2)})) translateY(Gbp('height')/2 - Gbp('stroke')/2) rotate(45deg);\n        width: $arrow-diag-v;\n      }\n      &:nth-child(2) {\n        transform: scaleX(1) scaleY(1) translateX(calc(-50% - #{$arrow-diag-v/4*sqrt(2) - Gbp('stroke')/4*sqrt(2)})) translateY(0) rotate(-45deg);\n        width: $arrow-diag-v;\n      }\n      &:nth-child(3) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(Gbp('stroke')) rotate(0);\n        opacity: 0;\n        pointer-events: none;\n      }\n    }\n  }@else if $state == 'arrow-bottom' {\n    .burgr-part {\n      &:nth-child(1) {\n        transform: scaleX(1) scaleY(1) translateX(calc(-50% + #{$arrow-diag-v/4*sqrt(2) - Gbp('stroke')/4*sqrt(2)})) translateY(Gbp('height')/2 - Gbp('stroke')/2) rotate(-45deg);\n        width: $arrow-diag-v;\n      }\n      &:nth-child(2) {\n        transform: scaleX(1) scaleY(1) translateX(calc(-50% - #{$arrow-diag-v/4*sqrt(2) - Gbp('stroke')/4*sqrt(2)})) translateY(0) rotate(45deg);\n        width: $arrow-diag-v;\n      }\n      &:nth-child(3) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(Gbp('stroke')) rotate(0);\n        opacity: 0;\n        pointer-events: none;\n      }\n    }\n  }@else if $state == 'normal' or $default == true { // state: normal\n    .burgr-part {\n      &:nth-child(1),\n      &:nth-child(2),\n      &:nth-child(3) {\n        opacity: 1;\n      }\n      &:nth-child(1) {\n        transform: scaleX(1) scaleY(1) translateX(calc(-50% - #{Gbp('width')*0.1/2})) translateY(0) rotate(0deg);\n        width: Gbp('width')*0.9;\n      }\n      &:nth-child(2) {\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(0) rotate(0deg);\n        width: Gbp('width');\n      }\n      &:nth-child(3) {\n        transform: scaleX(1) scaleY(1) translateX(calc(-50% - #{Gbp('width')*0.2/2})) translateY(0) rotate(0deg);\n        width: Gbp('width')*0.8;\n      }\n    }\n  }\n}\n\n@mixin burgr-gen($burgrs, $prefix) {\n  $burgrs-cache: ();\n  @each $name, $v in $burgrs {\n    $this: $v !global;\n    @if this('parent') {\n      $parent: G($burgrs, this('parent'));\n      $parent: R($parent, 'state');\n      $parent: R($parent, 'hover-state');\n      $parent: R($parent, 'active-state');\n      $burgrs-cache: S($burgrs-cache, $name, map-merge($parent, $this));\n    }@else {\n      $burgrs-cache: S($burgrs-cache, $name, $this);\n    }\n  }\n  $burgrs: add-bp-vars($burgrs-cache);\n  @each $name, $burgr in $burgrs {\n    $this: $burgr !global;\n    @if G(nth($this, 1), 'global', 'parent') {\n      $parent-name: G(nth($this, 1), 'global', 'parent');\n      @if $parent-name == \"#default#\" {\n        $name: '.' + $prefix + '-' + $name;\n      }@else {\n        $name: '.' + $prefix + '-' + $parent-name + '-' + $name;\n      }\n    }@else if $name == \"#default#\"{\n      $name: '.'+ $prefix;\n    }@else {\n      $name: '.'+ $prefix +'-' + $name;\n    }\n    #{$name} {\n      @each $bp in $burgr {\n        $this: $bp !global;\n        $this: Sbp('height', Gbp('stroke')*3 + Gbp('space-between')*2) !global;\n        $this: Sbp('diagonale', 0px) !global;\n        @if Gbp('width') {\n          @if Gbp(('stroke', 'space-between'), true) {\n            @if Gbp('width') < Gbp('height') {\n              $this: Sbp('diagonale', Gbp('width')*sqrt(2) - Gbp('stroke')) !global;\n            }@else {\n              $this: Sbp('diagonale', Gbp('height')*sqrt(2) - Gbp('stroke')) !global;\n            }\n          }\n        }\n\n        @include BPS(G($bp, 'breakpoint', 'max'), G($bp, 'breakpoint', 'min')) {\n          @if Gbp('width', false) {width: Gbp('width');}\n          @if Gbp(('stroke', 'space-between'), false) {height: Gbp('height');}\n          @if Gbp('parent') == null {\n            .burgr-part {\n              opacity: 1;\n              @if Gbp('width', false) {left: Gbp('width')/2;}\n              @if Gbp('stroke', false) {height: Gbp('stroke');}\n              @if Gbp('width', false) {width: Gbp('width');}\n              &:nth-child(2) {\n                @if Gbp(('space-between', 'stroke'), false) {top: Gbp('stroke') + Gbp('space-between');}\n              }\n              &:nth-child(3) {\n                @if Gbp(('space-between', 'stroke'), false) {top: Gbp('stroke')*2 + Gbp('space-between')*2;}\n              }\n            }\n          }\n\n          @if Gbp('state') {\n            @include state($this, 'state', if(Gbp('parent') == null, true, false));\n          }\n\n          @if Gbp('hover-state') {\n            &:hover {\n              @include state($this, 'hover-state');\n            }\n          }\n          @if Gbp('active-state') {\n            &.active {\n              @include state($this, 'active-state');\n            }\n          }\n        }\n      }\n    }\n  }\n}\n@include burgr-gen($burgrs, 'burgr');\n"]}