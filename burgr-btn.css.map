{"version":3,"sources":["burgr-btn.scss"],"names":[],"mappings":"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","file":"burgr-btn.css","sourcesContent":["@import \"helpers/functions\";\r\n@import \"helpers/breakpoints\";\r\n@import \"helpers/math\";\r\n\r\n$prefix: 'burgr' !default;\r\n\r\n$burgr-default: (\r\n  'width': 40px, // (px)\r\n  'stroke': 5px, // (px)\r\n  'space-between': 4px, // (px)\r\n  'state': 'normal', // normal, clasic, cross, arrow-left, arrow-right, arrow-top, arrow-bottom, vertical-points, horizontal-points\r\n  'active-state': 'cross', // normal, clasic, cross, arrow-left, arrow-right, arrow-top, arrow-bottom, vertical-points, horizontal-points\r\n  'hover-state': 'clasic', // normal, clasic, cross, arrow-left, arrow-right, arrow-top, arrow-bottom, vertical-points, horizontal-points\r\n  // 'arrow-size-even': true, // true : arrows will always have same size, false: arrows will always take the maximum space they can\r\n) !default;\r\n\r\n$burgr: () !default;\r\n$burgr: map-merge($burgr-default, $burgr);\r\n\r\n$burgrs-default: (\r\n  'clasic':(\r\n    'parent': '#default#',\r\n    'state': 'clasic',\r\n  ),\r\n  'cross':(\r\n    'parent': '#default#',\r\n    'state': 'cross',\r\n  ),\r\n  'left':(\r\n    'parent': '#default#',\r\n    'state': 'arrow-left',\r\n  ),\r\n  'right':(\r\n    'parent': '#default#',\r\n    'state': 'arrow-right',\r\n  ),\r\n  'top':(\r\n    'parent': '#default#',\r\n    'state': 'arrow-top',\r\n  ),\r\n  'bottom':(\r\n    'parent':  '#default#',\r\n    'state': 'arrow-bottom',\r\n  ),\r\n  'vertical-points':(\r\n    'parent': '#default#',\r\n    'state': 'vertical-points',\r\n  ),\r\n  'horizontal-points':(\r\n    'parent': '#default#',\r\n    'state': 'horizontal-points',\r\n  ),\r\n) !default;\r\n\r\n$burgrs: () !default;\r\n$burgrs: map-merge($burgrs-default, $burgrs);\r\n\r\n$burgrs: map-merge(('#default#' : $burgr), $burgrs);\r\n\r\n.burgr {\r\n  position: relative;\r\n  .burgr-part {\r\n    transition: 200ms;\r\n    position: absolute;\r\n    background-color: #333;\r\n  }\r\n}\r\n\r\n@mixin state($this, $state, $default: false) {\r\n  $state: Gbp($state);\r\n  $arrow-diag-h: Gbp('diagonale');\r\n  @if Gbp('diagonale')/sqrt(2) > Gbp('height')/2 {\r\n    $arrow-diag-h: Gbp('height')/2*sqrt(2);\r\n  }\r\n\r\n  $arrow-diag-v: Gbp('diagonale');\r\n  @if Gbp('diagonale')/sqrt(2) > Gbp('width')/2 {\r\n    $arrow-diag-v: Gbp('width')/2*sqrt(2);\r\n  }\r\n  @if Gbp('arrow-size-even') == null or Gbp('arrow-size-even') == true {\r\n    @if $arrow-diag-h > $arrow-diag-v {\r\n      $arrow-diag-h: $arrow-diag-v;\r\n    }@else {\r\n      $arrow-diag-v: $arrow-diag-h;\r\n    }\r\n  }\r\n\r\n  @if $state == 'clasic' {\r\n    .burgr-part {\r\n      &:nth-child(1),\r\n      &:nth-child(2),\r\n      &:nth-child(3) {\r\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(0) rotate(0deg);\r\n        width: Gbp('width');\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }@else if $state == 'cross' {\r\n    .burgr-part {\r\n      &:nth-child(1) {\r\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(Gbp('stroke') + Gbp('space-between')) rotate(45deg);\r\n        width: Gbp('diagonale');\r\n      }\r\n      &:nth-child(2) {\r\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(0) rotate(-45deg);\r\n        width: Gbp('diagonale');\r\n      }\r\n      &:nth-child(3) {\r\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(Gbp('stroke')) rotate(0deg);\r\n        opacity: 0;\r\n        pointer-events: none;\r\n      }\r\n    }\r\n  }@else if $state == 'vertical-points' {\r\n    .burgr-part {\r\n      &:nth-child(1),\r\n      &:nth-child(2),\r\n      &:nth-child(3) {\r\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(0) rotate(0deg);\r\n        width: Gbp('stroke');\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }@else if $state == 'horizontal-points' {\r\n    .burgr-part {\r\n      &:nth-child(1),\r\n      &:nth-child(2),\r\n      &:nth-child(3) {\r\n        width: Gbp('stroke');\r\n        opacity: 1;\r\n      }\r\n      &:nth-child(1) {\r\n        transform: scaleX(1) scaleY(1) translateX(calc(-50% - #{Gbp('space-between') + Gbp('stroke')})) translateY(Gbp('space-between') + Gbp('stroke')) rotate(0deg);\r\n      }\r\n      &:nth-child(2) {\r\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(0) rotate(0deg);\r\n      }\r\n      &:nth-child(3) {\r\n        transform: scaleX(1) scaleY(1) translateX(calc(-50% + #{Gbp('space-between') + Gbp('stroke')})) translateY(-(Gbp('space-between') + Gbp('stroke'))) rotate(0deg);\r\n      }\r\n    }\r\n  }@else if $state == 'arrow-left' {\r\n    .burgr-part {\r\n      &:nth-child(1) {\r\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY($arrow-diag-h/2/sqrt(2) + Gbp('stroke')/2/sqrt(2) - (Gbp('stroke')*0.5)) rotate(-45deg);\r\n        width: $arrow-diag-h;\r\n      }\r\n      &:nth-child(2) {\r\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY($arrow-diag-h/2/sqrt(2) - Gbp('stroke')/2/sqrt(2)) rotate(45deg);\r\n        width: $arrow-diag-h;\r\n      }\r\n      &:nth-child(3) {\r\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(Gbp('stroke')) rotate(0);\r\n        opacity: 0;\r\n        pointer-events: none;\r\n      }\r\n    }\r\n  }@else if $state == 'arrow-right' {\r\n    .burgr-part {\r\n      &:nth-child(1) {\r\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY($arrow-diag-h/2/sqrt(2) + Gbp('stroke')/2/sqrt(2) - (Gbp('stroke')*0.5)) rotate(45deg);\r\n        width: $arrow-diag-h;\r\n      }\r\n      &:nth-child(2) {\r\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY($arrow-diag-h/2/sqrt(2) - Gbp('stroke')/2/sqrt(2)) rotate(-45deg);\r\n        width: $arrow-diag-h;\r\n      }\r\n      &:nth-child(3) {\r\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(Gbp('stroke')) rotate(0);\r\n        opacity: 0;\r\n        pointer-events: none;\r\n      }\r\n    }\r\n  }@else if $state == 'arrow-top' {\r\n    .burgr-part {\r\n      &:nth-child(1) {\r\n        transform: scaleX(1) scaleY(1) translateX(calc(-50% + #{$arrow-diag-v/4*sqrt(2) - Gbp('stroke')/4*sqrt(2)})) translateY(Gbp('height')/2 - Gbp('stroke')/2) rotate(45deg);\r\n        width: $arrow-diag-v;\r\n      }\r\n      &:nth-child(2) {\r\n        transform: scaleX(1) scaleY(1) translateX(calc(-50% - #{$arrow-diag-v/4*sqrt(2) - Gbp('stroke')/4*sqrt(2)})) translateY(0) rotate(-45deg);\r\n        width: $arrow-diag-v;\r\n      }\r\n      &:nth-child(3) {\r\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(Gbp('stroke')) rotate(0);\r\n        opacity: 0;\r\n        pointer-events: none;\r\n      }\r\n    }\r\n  }@else if $state == 'arrow-bottom' {\r\n    .burgr-part {\r\n      &:nth-child(1) {\r\n        transform: scaleX(1) scaleY(1) translateX(calc(-50% + #{$arrow-diag-v/4*sqrt(2) - Gbp('stroke')/4*sqrt(2)})) translateY(Gbp('height')/2 - Gbp('stroke')/2) rotate(-45deg);\r\n        width: $arrow-diag-v;\r\n      }\r\n      &:nth-child(2) {\r\n        transform: scaleX(1) scaleY(1) translateX(calc(-50% - #{$arrow-diag-v/4*sqrt(2) - Gbp('stroke')/4*sqrt(2)})) translateY(0) rotate(45deg);\r\n        width: $arrow-diag-v;\r\n      }\r\n      &:nth-child(3) {\r\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(Gbp('stroke')) rotate(0);\r\n        opacity: 0;\r\n        pointer-events: none;\r\n      }\r\n    }\r\n  }@else if $state == 'normal' or $default == true { // state: normal\r\n    .burgr-part {\r\n      &:nth-child(1),\r\n      &:nth-child(2),\r\n      &:nth-child(3) {\r\n        opacity: 1;\r\n      }\r\n      &:nth-child(1) {\r\n        transform: scaleX(1) scaleY(1) translateX(calc(-50% - #{Gbp('width')*0.1/2})) translateY(0) rotate(0deg);\r\n        width: Gbp('width')*0.9;\r\n      }\r\n      &:nth-child(2) {\r\n        transform: scaleX(1) scaleY(1) translateX(-50%) translateY(0) rotate(0deg);\r\n        width: Gbp('width');\r\n      }\r\n      &:nth-child(3) {\r\n        transform: scaleX(1) scaleY(1) translateX(calc(-50% - #{Gbp('width')*0.2/2})) translateY(0) rotate(0deg);\r\n        width: Gbp('width')*0.8;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin burgr-gen($burgrs, $prefix) {\r\n  $burgrs-cache: ();\r\n  @each $name, $v in $burgrs {\r\n    $this: $v !global;\r\n    @if $v == () {@error $name;}\r\n    @if this('parent') {\r\n      $parent: G($burgrs, this('parent'));\r\n      $parent: R($parent, 'state');\r\n      $parent: R($parent, 'hover-state');\r\n      $parent: R($parent, 'active-state');\r\n      $burgrs-cache: S($burgrs-cache, $name, map-merge($parent, $this));\r\n    }@else {\r\n      $burgrs-cache: S($burgrs-cache, $name, $this);\r\n    }\r\n  }\r\n  $burgrs: add-bp-vars($burgrs-cache);\r\n  @each $name, $burgr in $burgrs {\r\n    $this: $burgr !global;\r\n    @if G(nth($this, 1), 'default', 'parent') {\r\n      $parent-name: G(nth($this, 1), 'default', 'parent');\r\n      @if $parent-name == \"#default#\" {\r\n        $name: '.' + $prefix + '-' + $name;\r\n      }@else {\r\n        $name: '.' + $prefix + '-' + $parent-name + '-' + $name;\r\n      }\r\n    }@else if $name == \"#default#\"{\r\n      $name: '.'+ $prefix;\r\n    }@else {\r\n      $name: '.'+ $prefix +'-' + $name;\r\n    }\r\n    #{$name} {\r\n      @each $bp in $burgr {\r\n        $this: $bp !global;\r\n        $this: Sbp('height', Gbp('stroke')*3 + Gbp('space-between')*2) !global;\r\n        $this: Sbp('diagonale', 0px) !global;\r\n        @if Gbp('width') {\r\n          @if Gbp(('stroke', 'space-between'), true) {\r\n            @if Gbp('width') < Gbp('height') {\r\n              $this: Sbp('diagonale', Gbp('width')*sqrt(2) - Gbp('stroke')) !global;\r\n            }@else {\r\n              $this: Sbp('diagonale', Gbp('height')*sqrt(2) - Gbp('stroke')) !global;\r\n            }\r\n          }\r\n        }\r\n\r\n        @include BPS(G($bp, 'breakpoint', 'max'), G($bp, 'breakpoint', 'min')) {\r\n          @if Gbp('width', false) {width: Gbp('width');}\r\n          @if Gbp(('stroke', 'space-between'), false) {height: Gbp('height');}\r\n          @if Gbp('parent') == null {\r\n            .burgr-part {\r\n              opacity: 1;\r\n              @if Gbp('width', false) {left: Gbp('width')/2;}\r\n              @if Gbp('stroke', false) {height: Gbp('stroke');}\r\n              @if Gbp('width', false) {width: Gbp('width');}\r\n              &:nth-child(2) {\r\n                @if Gbp(('space-between', 'stroke'), false) {top: Gbp('stroke') + Gbp('space-between');}\r\n              }\r\n              &:nth-child(3) {\r\n                @if Gbp(('space-between', 'stroke'), false) {top: Gbp('stroke')*2 + Gbp('space-between')*2;}\r\n              }\r\n            }\r\n          }\r\n\r\n          @if Gbp('state') {\r\n            @include state($this, 'state', if(Gbp('parent') == null, true, false));\r\n          }\r\n\r\n          @if Gbp('hover-state') {\r\n            &:hover {\r\n              @include state($this, 'hover-state');\r\n            }\r\n          }\r\n          @if Gbp('active-state') {\r\n            &.active {\r\n              @include state($this, 'active-state');\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n@include burgr-gen($burgrs, $prefix);\r\n"]}